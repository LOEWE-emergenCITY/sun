<?xml version='1.0' encoding='UTF-8'?>
<scenario name="/tmp/tmp3kkqfy2k">
  <networks>
    <network id="3" name="AdHocWiFi" icon="" canvas="0" type="WIRELESS_LAN">
      <position x="53.1245231628418" y="56.65447235107422" lat="47.57896042399966" lon="-122.13203788332326" alt="2.0"/>
    </network>
    <network id="4" name="uav0" icon="/root/.coregui/icons/uav.png" canvas="0" type="RJ45">
      <position x="346.0417175292969" y="1162.0745849609375" lat="47.574941096880394" lon="-122.13045909136717" alt="2.0"/>
    </network>
    <network id="5" name="qgc0" icon="/root/.coregui/icons/pc.png" canvas="0" type="RJ45">
      <position x="344.497802734375" y="1260.404052734375" lat="47.574583554249976" lon="-122.13046741290073" alt="2.0"/>
    </network>
  </networks>
  <devices>
    <device id="1" name="ACN" icon="" canvas="0" type="DTN" class="" image="">
      <position x="346.0417175292969" y="1162.0745849609375" lat="47.574941096880394" lon="-122.13045909136717" alt="2.0"/>
      <services>
        <service name="DefaultMulticastRoute"/>
        <service name="dtnecho"/>
        <service name="dtnd"/>
      </services>
    </device>
    <device id="15" name="HQ" icon="" canvas="0" type="SmartHome" class="" image="">
      <position x="344.1258850097656" y="1244.423095703125" lat="47.5746416638877" lon="-122.130469417497" alt="2.0"/>
      <services>
        <service name="DefaultMulticastRoute"/>
        <service name="dtnecho"/>
        <service name="dtnd"/>
      </services>
    </device>
    <device id="2" name="reson1" icon="" canvas="0" type="Mobile" class="" image="">
      <position x="1426.9471435546875" y="546.00732421875" lat="47.5771811664181" lon="-122.12463312817786" alt="2.0"/>
      <services>
        <service name="DefaultMulticastRoute"/>
        <service name="dtnecho"/>
        <service name="dtnd"/>
      </services>
    </device>
    <device id="6" name="reson2" icon="" canvas="0" type="Mobile" class="" image="">
      <position x="2007.0" y="200.0" lat="47.57843923453127" lon="-122.12150670609863" alt="2.0"/>
      <services>
        <service name="DefaultMulticastRoute"/>
        <service name="dtnecho"/>
        <service name="dtnd"/>
      </services>
    </device>
    <device id="7" name="reson3" icon="" canvas="0" type="Mobile" class="" image="">
      <position x="2076.0" y="863.0" lat="47.576028567816614" lon="-122.121134803571" alt="2.0"/>
      <services>
        <service name="DefaultMulticastRoute"/>
        <service name="dtnecho"/>
        <service name="dtnd"/>
      </services>
    </device>
    <device id="8" name="reson4" icon="" canvas="0" type="Mobile" class="" image="">
      <position x="881.3434448242188" y="336.0" lat="47.577944747843226" lon="-122.12757387302771" alt="2.0"/>
      <services>
        <service name="DefaultMulticastRoute"/>
        <service name="dtnecho"/>
        <service name="dtnd"/>
      </services>
    </device>
    <device id="9" name="reson5" icon="" canvas="0" type="Mobile" class="" image="">
      <position x="816.492431640625" y="404.55560302734375" lat="47.577695482594244" lon="-122.1279234129657" alt="2.0"/>
      <services>
        <service name="DefaultMulticastRoute"/>
        <service name="dtnecho"/>
        <service name="dtnd"/>
      </services>
    </device>
    <device id="10" name="water1" icon="" canvas="0" type="DTN7ZERO" class="" image="">
      <position x="1177.46533203125" y="268.8480529785156" lat="47.578188908308356" lon="-122.12597780812428" alt="2.0"/>
      <services>
        <service name="dtn7zero"/>
      </services>
    </device>
    <device id="11" name="power1" icon="" canvas="0" type="DTN7ZERO" class="" image="">
      <position x="743.080322265625" y="1058.36181640625" lat="47.57531821146053" lon="-122.12831909628507" alt="2.0"/>
      <services>
        <service name="dtn7zero"/>
      </services>
    </device>
    <device id="12" name="uav1" icon="" canvas="1" type="UAV" class="" image="">
      <position x="1069.976806640625" y="291.2320251464844" lat="47.57810752165014" lon="-122.12655715963564" alt="2.0"/>
      <services>
        <service name="dtnd"/>
        <service name="dtnecho"/>
        <service name="DefaultMulticastRoute"/>
      </services>
    </device>
  </devices>
  <links>
    <link node1="3" node2="4">
      <iface2 id="0" name="uav0"/>
    </link>
    <link node1="3" node2="5">
      <iface2 id="0" name="qgc0"/>
    </link>
    <link node1="3" node2="2">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:02" ip4="10.0.0.31" ip4_mask="24" ip6="2001::15" ip6_mask="128"/>
    </link>
    <link node1="3" node2="6">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:04" ip4="10.0.0.30" ip4_mask="24" ip6="2001::14" ip6_mask="128"/>
    </link>
    <link node1="3" node2="7">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:05" ip4="10.0.0.32" ip4_mask="24" ip6="2001::15" ip6_mask="128"/>
    </link>
    <link node1="3" node2="8">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:06" ip4="10.0.0.33" ip4_mask="24" ip6="2001::16" ip6_mask="128"/>
    </link>
    <link node1="3" node2="9">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:07" ip4="10.0.0.34" ip4_mask="24" ip6="2001::17" ip6_mask="128"/>
    </link>
    <link node1="3" node2="15">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:03" ip4="10.0.0.50" ip4_mask="24" ip6="2001::50" ip6_mask="128"/>
    </link>
    <link node1="3" node2="1">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:0d" ip4="10.0.0.60" ip4_mask="24" ip6="2001::60" ip6_mask="128"/>
    </link>
    <link node1="3" node2="11">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:08" ip4="10.0.0.20" ip4_mask="24" ip6="2001::14" ip6_mask="128"/>
    </link>
    <link node1="3" node2="10">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:09" ip4="10.0.0.21" ip4_mask="24" ip6="2001::15" ip6_mask="128"/>
    </link>
    <link node1="3" node2="12">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:0a" ip4="10.0.0.22" ip4_mask="24" ip6="2001::16" ip6_mask="128"/>
    </link>
  </links>
  <mobility_configurations>
    <mobility_configuration node="3" model="basic_range">
      <configuration name="range" value="100"/>
      <configuration name="bandwidth" value="54000000"/>
      <configuration name="jitter" value="0"/>
      <configuration name="delay" value="20000"/>
      <configuration name="error" value="0"/>
      <configuration name="promiscuous" value="0"/>
    </mobility_configuration>
  </mobility_configurations>
  <emane_global_configuration>
    <emulator/>
    <core>
      <configuration name="platform_id_start" value="1"/>
      <configuration name="nem_id_start" value="1"/>
      <configuration name="link_enabled" value="1"/>
      <configuration name="loss_threshold" value="30"/>
      <configuration name="link_interval" value="1"/>
      <configuration name="link_timeout" value="4"/>
    </core>
  </emane_global_configuration>
  <service_configurations>
    <service name="dtn7zero" node="10">
      <startups>
        <startup>bash -c 'PYTHONUNBUFFERED=TRUE python3 ./start-dtn7zero.py &amp;&gt; dtn7zero.log'</startup>
      </startups>
      <files>
        <file name="start-dtn7zero.py"><![CDATA[#!/usr/bin/python3

# This script is a blueprint on how to configure and start dtn7zero

import socket
import sys
import time
import random
from copy import deepcopy
import json
import random

from dtn7zero import setup, register, register_group, start_background_update_thread, run_forever
from dtn7zero.configuration import CONFIGURATION
from py_dtn7.bundle import PrimaryBlock

sys.path.append("/shared/nexus_sensors/")
import watersim

CONFIGURATION.DEBUG = True
CONFIGURATION.IPND.INTERFACE_WHITELIST = ["eth0"]

node_id = f"dtn://{socket.gethostname()}/"
node_endpoint = setup(node_id)

with open("/shared/nexus_sensors/watersim.json") as f:
    config = json.load(f)

node = socket.gethostname()

### Option: send messages
### Note: dtn7zero can update the framework with a background-thread, which leaves the main-thread for user defined code
###       -> recommended, as user defined code will not interfere with the framework update times (background-thread keeps running, as long as main-thread is running)
start_background_update_thread()

try:
    while True:        
        nval = watersim.nextValue(config, node)
        print("Sending values",nval)
        node_endpoint.send(json.dumps(nval).encode(), "dtn://nexus/~watersim")
        time.sleep(watersim.SEND_INTERVAL)
except KeyboardInterrupt:
    pass

]]></file>
      </files>
    </service>
    <service name="dtn7zero" node="11">
      <startups>
        <startup>bash -c 'PYTHONUNBUFFERED=TRUE python3 ./start-dtn7zero.py &amp;&gt; dtn7zero.log'</startup>
      </startups>
      <files>
        <file name="start-dtn7zero.py"><![CDATA[#!/usr/bin/python3

# This script is a blueprint on how to configure and start dtn7zero

import socket
import sys
import time
import random
import json

from dtn7zero import setup, register, register_group, start_background_update_thread, run_forever
from dtn7zero.configuration import CONFIGURATION
from py_dtn7.bundle import PrimaryBlock

sys.path.append("/shared/nexus_sensors/")
import powersim

CONFIGURATION.DEBUG = True
CONFIGURATION.IPND.INTERFACE_WHITELIST = ["eth0"]

node_id = f"dtn://{socket.gethostname()}/"
node_endpoint = setup(node_id)

with open("/shared/nexus_sensors/powersim.json") as f:
    config = json.load(f)

node = socket.gethostname()

### Option: send messages
### Note: dtn7zero can update the framework with a background-thread, which leaves the main-thread for user defined code
###       -> recommended, as user defined code will not interfere with the framework update times (background-thread keeps running, as long as main-thread is running)
start_background_update_thread()

try:
    while True:        
        nval = powersim.nextValue(config, node)
        print("Sending values",nval)
        node_endpoint.send(json.dumps(nval).encode(), "dtn://nexus/~powersim")
        time.sleep(powersim.SEND_INTERVAL)
except KeyboardInterrupt:
    pass
]]></file>
      </files>
    </service>
  </service_configurations>
  <session_origin lat="47.579166412353516" lon="-122.13232421875" alt="2.0" scale="60.0"/>
  <session_options>
    <configuration name="controlnet" value="ctrl0"/>
    <configuration name="controlnet0" value="172.16.0.0/24"/>
    <configuration name="controlnet1" value=""/>
    <configuration name="controlnet2" value=""/>
    <configuration name="controlnet3" value=""/>
    <configuration name="controlnet_updown_script" value=""/>
    <configuration name="enablerj45" value="1"/>
    <configuration name="preservedir" value="0"/>
    <configuration name="enablesdt" value="0"/>
    <configuration name="sdturl" value="tcp://127.0.0.1:50000/"/>
    <configuration name="ovs" value="0"/>
  </session_options>
  <session_metadata>
    <configuration name="canvas" value="{&quot;gridlines&quot;: false, &quot;dimensions&quot;: [2560, 1417], &quot;canvases&quot;: [{&quot;id&quot;: 1, &quot;wallpaper&quot;: &quot;darmstadt-model.jpg&quot;, &quot;wallpaper_style&quot;: 1, &quot;fit_image&quot;: false}]}"/>
    <configuration name="edges" value="[]"/>
    <configuration name="shapes" value="[{&quot;canvas&quot;: 1, &quot;type&quot;: &quot;text&quot;, &quot;iconcoords&quot;: [1322.2603261697907, 49.36930345983822], &quot;label&quot;: &quot;SUN Network View&quot;, &quot;fontfamily&quot;: &quot;Droid Sans Fallback&quot;, &quot;fontsize&quot;: 20, &quot;labelcolor&quot;: &quot;#000000&quot;, &quot;color&quot;: &quot;&quot;, &quot;border&quot;: &quot;#000000&quot;, &quot;width&quot;: 1, &quot;bold&quot;: true, &quot;italic&quot;: false, &quot;underline&quot;: false}]"/>
    <configuration name="hidden" value="[]"/>
  </session_metadata>
  <default_services>
    <node type="mdr">
      <service name="zebra"/>
      <service name="OSPFv3MDR"/>
      <service name="IPForward"/>
    </node>
    <node type="PC">
      <service name="DefaultRoute"/>
    </node>
    <node type="prouter"/>
    <node type="router">
      <service name="zebra"/>
      <service name="OSPFv2"/>
      <service name="OSPFv3"/>
      <service name="IPForward"/>
    </node>
    <node type="host">
      <service name="DefaultRoute"/>
      <service name="SSH"/>
    </node>
    <node type="UAV">
      <service name="DefaultRoute"/>
      <service name="SSH"/>
    </node>
  </default_services>
</scenario>
